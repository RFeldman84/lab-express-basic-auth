x1. user schema User.model.js

x2. update name data base name?? 

x3. auth folder views 

x4. view - sign-up.hbs form

x5. make route - auth.routes.js

x6. GET route  path & render

x7. import set up route on app.js

8. POST ROUTE
 xPOST route 
9.bcryptjs stuff
 x npm i bcryptjs for POST password
 xrequire bcryptjs on auth.route.js

BCRYPTJS set up in POST 
x11.  saltRounds 
x12. bcryptjs.genSalt
x13.then hash
x14.then create user 
x15. return User.create ---sends user with hased pw to database
------------
form validation
 in POST signup  no email stuff
cover server-side mongoose mongo validation errors ...err 500? err mongo 11000? ... *remember return after each if it end*
do if else statements in catch right order
xx1. if statement !email !pw etc return  render error message ALL fields
2. put error message end of form
VALID FORMATS
PASSWORD
3.if statement variable const regex = /(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/;
4. render error if statement then return 
6. 
DO CATCH ERRORS AT END if else ...
7. if else for unique errors  UN or Email used mongo error 11000?
-------
Authentication in POST 
1. views login 
2. get/post form set up same but for login
3. get render auth.login
POST
4. if for !UN !PW error message
5. Users.findOne
6. !user if statement & error
7. else if for compare bcrypt password
8. if not match..
9. if match..
10. render profile page make user view files and profile hbs
11. how to show new user name?

------
Sessions
